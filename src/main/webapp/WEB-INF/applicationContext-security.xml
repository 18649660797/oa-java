<?xml version="1.0" encoding="UTF-8"?>
<beans  xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:security="http://www.springframework.org/schema/security"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-3.2.xsd">
    <security:http pattern="/static/**" security="none" />
    <security:http pattern="/favicon.ico" security="none" />
    <security:http auto-config='false' pattern="/**" authentication-manager-ref="authenticationManager" entry-point-ref="adminAuthenticationEntryPoint">
        <!-- All admin URLs will be secured with https -->
        <security:intercept-url pattern="/**" requires-channel="any" />
        <security:intercept-url pattern="/" requires-channel="any" />

        <security:access-denied-handler error-page="/login"></security:access-denied-handler>

        <security:logout logout-url="/logout" invalidate-session="true" logout-success-url="/login" />

        <!-- Since we run this alongside the site, we need to set up the special port mapping -->
        <!-- This isn't necessary for site becauase it utilizes a default mapping -->
        <!-- Note that since we are providing a special mapping, we must repeat the default ones -->
        <security:port-mappings>
            <security:port-mapping http="80" https="443"/>
            <security:port-mapping http="8080" https="8443"/>
            <security:port-mapping http="8081" https="8444"/>
        </security:port-mappings>

        <security:remember-me key="gabin@edy" user-service-ref="userDetailsService" />

        <security:custom-filter ref="preSecurityFilterChain" before="CHANNEL_FILTER"/>
        <security:custom-filter ref="adminLoginFilter" position="FORM_LOGIN_FILTER"/>
        <security:custom-filter ref="adminFilterSecurityInterceptor" after="EXCEPTION_TRANSLATION_FILTER"/>
        <security:custom-filter ref="postSecurityFilterChain" after="SWITCH_USER_FILTER"/>
    </security:http>

    <bean id="adminAuthenticationEntryPoint" class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
        <constructor-arg value="/login"/>
        <property name="useForward" value="true"/>
    </bean>

    <bean id="adminLoginFilter" class="top.gabin.oa.web.filter.AdminLoginFilter" >
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="authenticationSuccessHandler" ref="adminAuthenticationSuccessHandler"/>
        <property name="authenticationFailureHandler" ref="adminAuthenticationFailureHandler"/>
        <property name="filterProcessesUrl" value="/j_admin_login"/>
    </bean>

    <!-- Sets the login success URL -->
    <bean id="adminAuthenticationSuccessHandler" class="top.gabin.oa.web.security.AdminAuthenticationSuccessHandler">
        <property name="defaultTargetUrl" value="/"/>
        <property name="alwaysUseDefaultTargetUrl" value="true"/>
    </bean>

    <!-- Sets the login failure URL -->
    <bean id="adminAuthenticationFailureHandler" class="top.gabin.oa.web.security.AdminAuthenticationFailureHandler">
        <constructor-arg value="/login" />
    </bean>

    <!-- This ensures that the user has permissions to perform the requested operation -->
    <bean id="adminFilterSecurityInterceptor"
          class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
        <property name="accessDecisionManager" ref="accessDecisionManager"/>
        <property name="authenticationManager" ref="authenticationManager" />
        <property name="securityMetadataSource">
            <security:filter-security-metadata-source>
                <security:intercept-url pattern="/**/*" access="permission_default" />
                <security:intercept-url pattern="/*" access="permission_default" />
            </security:filter-security-metadata-source>
        </property>
    </bean>

    <!--  The BLC Authentication manager.   -->
    <security:authentication-manager alias="authenticationManager">
        <security:authentication-provider user-service-ref="userDetailsService">
            <security:password-encoder ref="blPasswordEncoder" />
        </security:authentication-provider>
    </security:authentication-manager>

    <bean id="blPasswordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder"></bean>
    <bean id="userDetailsService" class="top.gabin.oa.web.service.security.UserDetailsServiceImpl"></bean>

    <aop:config/>

    <!-- The access decision manager works in conjunciton with global method security -->
    <bean id="accessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased">
        <constructor-arg index="0">
            <list>
                <bean class="org.springframework.security.access.vote.RoleVoter">
                    <property name="rolePrefix" value="permission_" />
                </bean>
            </list>
        </constructor-arg>
    </bean>
</beans>